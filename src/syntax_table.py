"""O analisador sintático utiliza a tabela de reconhecimento sintático que foi construida com uma planilha e transformada em um dicionário"""

SYNTAX_TABLE = {
    "PROGRAM": {
        "LBRACE": "STATEMENT",
        "SEMICOLON": "STATEMENT",
        "DEF": "FUNCLIST",
        "INT": "STATEMENT",
        "FLOAT": "STATEMENT",
        "STR": "STATEMENT",
        "IF": "STATEMENT",
        "FOR": "STATEMENT",
        "PRINT": "STATEMENT",
        "READ": "STATEMENT",
        "RETURN": "STATEMENT",
        "IDENT": "STATEMENT",
        "EOF": "",
    },
    "FUNCLIST": {
        "DEF": "FUNCDEF FUNCLIST",
        "EOF": "",
    },
    "FUNCDEF": {
        "DEF": "DEF IDENT LPAREN PARAMLIST RPAREN LBRACE STATELIST RBRACE"
    },
    "PARAMLIST": {
        "RPAREN": "",
        "INT": "DATATYPE IDENT PARAMLISTEXT",
        "FLOAT": "DATATYPE IDENT PARAMLISTEXT",
        "STR": "DATATYPE IDENT PARAMLISTEXT",
    },
    "PARAMLISTEXT": {
        "RPAREN": "",
        "COMMA": "COMMA PARAMLIST",
    },
    "DATATYPE": {
        "INT": "INT",
        "STR": "STR",
        "FLOAT": "FLOAT",
    },
    "STATEMENT": {
        "LBRACE": "LBRACE STATELIST RBRACE",
        "SEMICOLON": "SEMICOLON",
        "INT": "VARDECL SEMICOLON",
        "FLOAT": "VARDECL SEMICOLON",
        "STR": "VARDECL SEMICOLON",
        "IF": "IFSTAT",
        "FOR": "FORSTAT",
        "PRINT": "PRINTSTAT SEMICOLON",
        "READ": "READSTAT SEMICOLON",
        "BREAK": "BREAK SEMICOLON",
        "RETURN": "RETURN SEMICOLON",
        "IDENT": "ATRIBSTAT SEMICOLON",
    },
    "VARDECL": {
        "INT": "INT IDENT ARRAYSIMPLEDECL",
        "FLOAT": "FLOAT IDENT ARRAYSIMPLEDECL",
        "STR": "STR IDENT ARRAYSIMPLEDECL",
    },
    "ARRAYSIMPLEDECL": {
        "LBRACKET": "LBRACKET INT_CONSTANT RBRACKET ARRAYSIMPLEDECL",
        "SEMICOLON": "",
        "ATRIBUICAO": "",
    },
    "ATRIBSTAT": {
        "IDENT": "LVALUE ATRIBUICAO ASSIGNORALLOC"
    },
    "ASSIGNORALLOC": {
        "LPAREN": "EXPRESSION",
        "PLUS": "EXPRESSION",
        "MINUS": "EXPRESSION",
        "NULL": "EXPRESSION",
        "NEW": "ALLOCEXP",
        "STRING_CONSTANT": "EXPRESSION",
        "FLOAT_CONSTANT": "EXPRESSION",
        "INT_CONSTANT": "EXPRESSION",
        "IDENT": "EXPRESSION",
    },
    "PARAMLISTCALL": {
        "RPAREN": "",
        "IDENT": "IDENT PARAMLISTCONT",
    },
    "PARAMLISTCONT": {
        "RPAREN": "",
        "COMMA": "COMMA PARAMLISTCALL",
    },
    "PRINTSTAT": {
        "PRINT": "PRINT EXPRESSION",
    },
    "READSTAT": {
        "READ": "READ LVALUE"
    },
    "IFSTAT": {
        "IF": "IF LPAREN EXPRESSION RPAREN STATEMENT OPTIONALELSE"
    },
    "OPTIONALELSE": {
        "LPAREN": "",
        "RPAREN": "",
        "LBRACE": "",
        "RBRACE": "",
        "SEMICOLON": "",
        "INT": "",
        "FLOAT": "",
        "STR": "",
        "IF": "",
        "ELSE": "ELSE STATEMENT",
        "FOR": "",
        "PRINT": "",
        "READ": "",
        "BREAK": "",
        "RETURN": "",
        "IDENT": "",
        "EOF": "",
    },
    "FORSTAT": {
        "FOR": "FOR LPAREN ATRIBSTAT SEMICOLON EXPRESSION SEMICOLON ATRIBSTAT RPAREN STATEMENT"
    },
    "STATELIST": {
        "LBRACE": "STATEMENT STATEMENTSEQ",
        "RBRACE": "",
        "SEMICOLON": "STATEMENT STATEMENTSEQ",
        "INT": "STATEMENT STATEMENTSEQ",
        "FLOAT": "STATEMENT STATEMENTSEQ",
        "STR": "STATEMENT STATEMENTSEQ",
        "IF": "STATEMENT STATEMENTSEQ",
        "FOR": "STATEMENT STATEMENTSEQ",
        "PRINT": "STATEMENT STATEMENTSEQ",
        "READ": "STATEMENT STATEMENTSEQ",
        "BREAK": "STATEMENT STATEMENTSEQ",
        "RETURN": "STATEMENT STATEMENTSEQ",
        "IDENT": "STATEMENT STATEMENTSEQ",
    },
    "STATEMENTSEQ": {
        "LPAREN": "",
        "RPAREN": "",
        "LBRACE": "STATELIST",
        "RBRACE": "",
        "SEMICOLON": "STATELIST",
        "INT": "STATELIST",
        "FLOAT": "STATELIST",
        "STR": "STATELIST",
        "IF": "STATELIST",
        "FOR": "STATELIST",
        "PRINT": "STATELIST",
        "READ": "STATELIST",
        "BREAK": "STATELIST",
        "RETURN": "STATELIST",
        "IDENT": "STATELIST",
        "EOF": "",
    },
    "ALLOCEXP": {
        "NEW": "NEW DATATYPE LBRACKET NUMEXPRESSION RBRACKET ARRAYALLOCSEQ",
    },
    "ARRAYALLOCSEQ": {
        "LBRACKET": "LBRACKET NUMEXPRESSION RBRACKET ARRAYALLOCSEQ",
        "RPAREN": "",
        "SEMICOLON": "",
    },
    "EXPRESSION": {
        "LPAREN": "NUMEXPRESSION EXPRESSIONOP",
        "PLUS": "NUMEXPRESSION EXPRESSIONOP",
        "MINUS": "NUMEXPRESSION EXPRESSIONOP",
        "NULL": "NUMEXPRESSION EXPRESSIONOP",
        "STRING_CONSTANT": "NUMEXPRESSION EXPRESSIONOP",
        "FLOAT_CONSTANT": "NUMEXPRESSION EXPRESSIONOP",
        "INT_CONSTANT": "NUMEXPRESSION EXPRESSIONOP",
        "IDENT": "NUMEXPRESSION EXPRESSIONOP",
    },
    "EXPRESSIONOP": {
        "RPAREN": "",
        "SEMICOLON": "",
        "MAIOROUIGUAL": "OPERATOR NUMEXPRESSION",
        "MENOROUIGUAL": "OPERATOR NUMEXPRESSION",
        "MENOR": "OPERATOR NUMEXPRESSION",
        "MAIOR": "OPERATOR NUMEXPRESSION",
        "IGUAL": "OPERATOR NUMEXPRESSION",
        "DIFERENTE": "OPERATOR NUMEXPRESSION",
    },
    "NUMEXPRESSION": {
        "LPAREN": "TERM ADDITIVEEXPCHAIN",
        "PLUS": "TERM ADDITIVEEXPCHAIN",
        "MINUS": "TERM ADDITIVEEXPCHAIN",
        "NULL": "TERM ADDITIVEEXPCHAIN",
        "STRING_CONSTANT": "TERM ADDITIVEEXPCHAIN",
        "FLOAT_CONSTANT": "TERM ADDITIVEEXPCHAIN",
        "INT_CONSTANT": "TERM ADDITIVEEXPCHAIN",
        "IDENT": "TERM ADDITIVEEXPCHAIN",
    },
    "ADDITIVEEXPCHAIN": {
        "RBRACKET": "",
        "RPAREN": "",
        "MAIOROUIGUAL": "",
        "MENOROUIGUAL": "",
        "MENOR": "",
        "MAIOR": "",
        "IGUAL": "",
        "DIFERENTE": "",
        "PLUS": "UNARYOPS TERM ADDITIVEEXPCHAIN",
        "MINUS": "UNARYOPS TERM ADDITIVEEXPCHAIN",
        "SEMICOLON": "",
    },
    "TERM": {
        "LPAREN": "UNARYEXP MULTIPLICATIVECHAIN",
        "PLUS": "UNARYEXP MULTIPLICATIVECHAIN",
        "MINUS": "UNARYEXP MULTIPLICATIVECHAIN",
        "NULL": "UNARYEXP MULTIPLICATIVECHAIN",
        "STRING_CONSTANT": "UNARYEXP MULTIPLICATIVECHAIN",
        "FLOAT_CONSTANT": "UNARYEXP MULTIPLICATIVECHAIN",
        "INT_CONSTANT": "UNARYEXP MULTIPLICATIVECHAIN",
        "IDENT": "UNARYEXP MULTIPLICATIVECHAIN",
    },
    "MULTIPLICATIVECHAIN": {
        "RBRACKET": "",
        "RPAREN": "",
        "PLUS": "",
        "MINUS": "",
        "MULTIPLY": "BINARYOPS UNARYEXP MULTIPLICATIVECHAIN",
        "DIVIDE": "BINARYOPS UNARYEXP MULTIPLICATIVECHAIN",
        "PERCENT": "BINARYOPS UNARYEXP MULTIPLICATIVECHAIN",
        "MAIOROUIGUAL": "",
        "MENOROUIGUAL": "",
        "MENOR": "",
        "MAIOR": "",
        "IGUAL": "",
        "DIFERENTE": "",
        "SEMICOLON": "",
    },
    "BINARYOPS": {
        "MULTIPLY": "MULTIPLY",
        "DIVIDE": "DIVIDE",
        "PERCENT": "PERCENT",
    },
    "UNARYEXP": {
        "LPAREN": "UNARYOPCHECK FACTOR",
        "PLUS": "UNARYOPCHECK FACTOR",
        "MINUS": "UNARYOPCHECK FACTOR",
        "NULL": "UNARYOPCHECK FACTOR",
        "STRING_CONSTANT": "UNARYOPCHECK FACTOR",
        "FLOAT_CONSTANT": "UNARYOPCHECK FACTOR",
        "INT_CONSTANT": "UNARYOPCHECK FACTOR",
        "IDENT": "UNARYOPCHECK FACTOR",
    },
    "UNARYOPCHECK": {
        "LPAREN": "",
        "PLUS": "UNARYOPS",
        "MINUS": "UNARYOPS",
        "STRING_CONSTANT": "",
        "FLOAT_CONSTANT": "",
        "INT_CONSTANT": "",
        "IDENT": "",
        "NULL": "",
    },
    "UNARYOPS": {
        "PLUS": "PLUS",
        "MINUS": "MINUS",
    },
    "FACTOR": {
        "LPAREN": "LPAREN NUMEXPRESSION RPAREN",
        "NULL": "NULL",
        "STRING_CONSTANT": "STRING_CONSTANT",
        "FLOAT_CONSTANT": "FLOAT_CONSTANT",
        "INT_CONSTANT": "INT_CONSTANT",
        "IDENT": "LVALUE",
    },
    "LVALUE": {
        "IDENT": "IDENT ARRAYORFUNCCALL",
    },
    "ARRAYORFUNCCALL": {
        "LBRACKET": "LBRACKET NUMEXPRESSION RBRACKET ARRAYSEQ",
        "RBRACKET": "",
        "LPAREN": "LPAREN PARAMLISTCALL RPAREN",
        "RPAREN": "",
        "SEMICOLON": "",
        "MAIOROUIGUAL": "",
        "MENOROUIGUAL": "",
        "MENOR": "",
        "MAIOR": "",
        "IGUAL": "",
        "DIFERENTE": "",
        "ATRIBUICAO": "",
        "PLUS": "",
        "MINUS": "",
        "MULTIPLY": "",
        "DIVIDE": "",
        "PERCENT": "",
    },
    "ARRAYSEQ": {
        "LBRACKET": "LBRACKET NUMEXPRESSION RBRACKET ARRAYSEQ",
        "RPAREN": "",
        "SEMICOLON": "",
        "MAIOROUIGUAL": "",
        "MENOROUIGUAL": "",
        "MENOR": "",
        "MAIOR": "",
        "IGUAL": "",
        "DIFERENTE": "",
        "ATRIBUICAO": "",
        "PLUS": "",
        "MINUS": "",
        "MULTIPLY": "",
        "DIVIDE": "",
        "PERCENT": "",
    },
    "OPERATOR": {
        "MAIOROUIGUAL": "MAIOROUIGUAL",
        "MENOROUIGUAL": "MENOROUIGUAL",
        "MENOR": "MENOR",
        "MAIOR": "MAIOR",
        "IGUAL": "IGUAL",
        "DIFERENTE": "DIFERENTE",
    },
}
